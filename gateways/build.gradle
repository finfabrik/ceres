subprojects {
    apply plugin : 'application'
    apply plugin: 'com.bmuschko.docker-java-application'

    jar {
        exclude('logback.xml')
        exclude('defaults.conf')
    }

    applicationDistribution.from("src/conf") { into "conf" }
    ext.memoryUsage = "1g"
    ext.getMemoryUsage = {memoryUsage}

    applicationDefaultJvmArgs = [
            "-server", "-showversion",
            "-XmsMY_APP_MEM",
            "-XmxMY_APP_MEM",
            "-Dlog.root=MY_APP_HOME/logs",
            "-Dlog.name=MY_APP_NAME",
            "-Duser.timezone=GMT",
            "-Dstd.redirect=true",
            "-XX:-OmitStackTraceInFastThrow",
            "-XX:+HeapDumpOnOutOfMemoryError",
            "-XX:HeapDumpPath=MY_APP_HOME/logs/gc.hprof",
            "-XX:+DisableExplicitGC",
            "-XX:+PrintGCDetails",
            "-XX:+PrintGCApplicationStoppedTime",
            "-XX:+PrintGCApplicationConcurrentTime",
            "-XX:+PrintGCDateStamps",
            "-XX:+UseConcMarkSweepGC",
            "-XX:+ScavengeBeforeFullGC",
            "-XX:CMSInitiatingOccupancyFraction=55",
            "-XX:+CMSScavengeBeforeRemark",
            "-XX:-CMSIncrementalMode",
            "-XX:-CMSClassUnloadingEnabled",
            "-XX:+CMSConcurrentMTEnabled",
            "-XX:+CMSParallelRemarkEnabled",
            "-XX:+UseStringCache",
            "-XX:+OptimizeStringConcat",
            "-Xloggc:MY_APP_HOME/logs/gc.log"
    ]

    startScripts {
        doLast {

            def memUsage = getMemoryUsage()
            def unixSetMem = """
                    |[ -z "\$APP_MEM" ] && APP_MEM=$memUsage
                    |""".stripMargin()
            def EVAL_SET = "eval set"
            unixScript.text = unixScript.text.replace(EVAL_SET, unixSetMem + EVAL_SET)
            unixScript.text = unixScript.text.replace('MY_APP_NAME', '\$APP_NAME')
            unixScript.text = unixScript.text.replace('MY_APP_HOME', '\$APP_HOME')
            unixScript.text = unixScript.text.replace('MY_APP_MEM', '\$APP_MEM')
            unixScript.text = unixScript.text.replace('CLASSPATH=$APP_HOME/lib', 'CLASSPATH=$APP_HOME/conf/:$APP_HOME/lib')

            def windowsSetMem = """
                    |if "%APP_MEM%" == "" set APP_MEM=$memUsage
                    |""".stripMargin()
            def SET_JAVA_DEFAULT = "set DEFAULT_JVM_OPTS"
            windowsScript.text = windowsScript.text.replace(SET_JAVA_DEFAULT, windowsSetMem + SET_JAVA_DEFAULT)
            windowsScript.text = windowsScript.text.replace('MY_APP_NAME', applicationName)
            windowsScript.text = windowsScript.text.replace('MY_APP_HOME', '%~dp0..')
            windowsScript.text = windowsScript.text.replace('MY_APP_MEM', '%APP_MEM%')
            windowsScript.text = windowsScript.text.replace('CLASSPATH=%APP_HOME%\\lib', 'CLASSPATH=%APP_HOM%\\conf;%APP_HOME%\\lib')
        }
    }

    dockerDistTar {
        instruction {"RUN mkdir -p /${applicationName}/logs"}
        instruction {"RUN mkdir -p /${applicationName}/chronicles"}
    }
}

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:3.2.5'
    }
}